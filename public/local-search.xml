<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Knowledge Graph</title>
    <link href="/2023/09/30/Knowledge-Graph/"/>
    <url>/2023/09/30/Knowledge-Graph/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="#%E4%B8%80%E4%B8%AA%E5%9B%BE%E5%83%8F%E7%AE%97%E6%B3%95%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD">一个图像算法工程师的知识图谱：持续更新中</a><ul><li><a href="#%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80">编程基础</a></li><li><a href="#%E5%9B%BE%E5%83%8F%E5%9F%BA%E7%A1%80">图像基础</a><ul><li><a href="#%E9%95%9C%E5%A4%B4%E9%80%89%E5%9E%8B">镜头选型</a></li><li><a href="#sensor%E9%80%89%E5%9E%8B">Sensor选型</a></li><li><a href="#%E5%85%B8%E5%9E%8B-isp-pipeline">典型 ISP Pipeline</a></li><li><a href="#%E5%85%B8%E5%9E%8B-isp-ip">典型 ISP IP</a></li><li><a href="#%E6%8E%A8%E8%8D%90%E8%AF%BB%E7%89%A9">推荐读物</a></li></ul></li><li><a href="#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">参考链接</a><ul><li><a href="#python%E6%95%99%E7%A8%8B">Python教程</a></li><li><a href="#cmake%E6%95%99%E7%A8%8B">CMake教程</a></li><li><a href="#matlab%E6%95%99%E7%A8%8B">Matlab教程</a></li><li><a href="#cuda%E6%95%99%E7%A8%8B">CUDA教程</a></li><li><a href="#git%E6%95%99%E7%A8%8B">Git教程</a></li><li><a href="#doxygen%E6%95%99%E7%A8%8B">Doxygen教程</a></li><li><a href="#docker%E6%95%99%E7%A8%8B">Docker教程</a></li><li><a href="#opencv%E6%95%99%E7%A8%8B">OpenCV教程</a></li><li><a href="#roscatkin%E6%95%99%E7%A8%8B">ROS&#x2F;Catkin教程</a></li><li><a href="#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F">设计模式</a></li></ul></li></ul></li></ul><hr><h1 id="一个图像算法工程师的知识图谱：持续更新中"><a href="#一个图像算法工程师的知识图谱：持续更新中" class="headerlink" title="一个图像算法工程师的知识图谱：持续更新中"></a>一个图像算法工程师的知识图谱：持续更新中</h1><p>本文旨在对个人过往的工作经验做一个复盘，整理出一份 <strong>图像算法工程师的知识图谱</strong> 。利于后续的温故知新与查漏补缺。同时广而告之，便于和同行间进行交流。</p><hr><h2 id="编程基础"><a href="#编程基础" class="headerlink" title="编程基础"></a>编程基础</h2><p>图像算法工程师作为码农的一个分支，对于编程能力也有着相当的要求。而当今不同的岗位需求对于图像算法工程师也有着截然不同的能力要求。基于笔者有限的工作经验，对于移动端的图像算法所需的基础编程能力做简单的的梳理。</p><table><thead><tr><th>基础能力</th><th>基础技能</th><th>学习途径</th><th>备注</th></tr></thead><tbody><tr><td>系统平台</td><td>Unix</td><td><a href="#unix%E6%95%99%E7%A8%8B">Unix教程</a></td><td>Ubuntu&#x2F;WSL2</td></tr><tr><td></td><td>Windows</td><td>—</td><td>—</td></tr><tr><td></td><td>Android</td><td>—</td><td>—</td></tr><tr><td></td><td>IOS</td><td>—</td><td>—</td></tr><tr><td>编程语言</td><td>C&#x2F;C++</td><td><a href="#cc%E6%95%99%E7%A8%8B">C&#x2F;C++教程</a></td><td>—</td></tr><tr><td></td><td>Python</td><td><a href="#python%E6%95%99%E7%A8%8B">Python教程</a></td><td>—</td></tr><tr><td></td><td>Matlab</td><td><a href="#matlab%E6%95%99%E7%A8%8B">Matlab教程</a></td><td>—</td></tr><tr><td></td><td>CUDA</td><td><a href="#cuda%E6%95%99%E7%A8%8B">CUDA教程</a></td><td>—</td></tr><tr><td></td><td>CMake</td><td><a href="#cmake%E6%95%99%E7%A8%8B">CMake教程</a></td><td>—</td></tr><tr><td>代码管理</td><td>Git</td><td><a href="#git%E6%95%99%E7%A8%8B">Git教程</a></td><td>—</td></tr><tr><td></td><td>Repo</td><td>—</td><td>—</td></tr><tr><td></td><td>Gerrit</td><td>—</td><td>—</td></tr><tr><td>编程文档</td><td>Markdown</td><td>—</td><td>—</td></tr><tr><td></td><td>Doxygen</td><td><a href="#doxygen%E6%95%99%E7%A8%8B">Doxygen教程</a></td><td>—</td></tr><tr><td></td><td>LaTex</td><td>—</td><td>—</td></tr><tr><td>编程思想</td><td>DesignPattern</td><td><a href="#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F">设计模式</a></td><td>—</td></tr><tr><td></td><td>代码重构</td><td>—</td><td>—</td></tr><tr><td>编程工具</td><td>VSCode</td><td>—</td><td>—</td></tr><tr><td></td><td>OpenCV</td><td><a href="#opencv%E6%95%99%E7%A8%8B">OpenCV教程</a></td><td>—</td></tr><tr><td></td><td>ROS</td><td><a href="#roscatkin%E6%95%99%E7%A8%8B">ROS&#x2F;Catkin教程</a></td><td>—</td></tr><tr><td></td><td>V4l2</td><td>—</td><td>—</td></tr><tr><td></td><td>GStream</td><td>—</td><td>—</td></tr><tr><td></td><td>Docker</td><td><a href="#docker%E6%95%99%E7%A8%8B">Docker教程</a></td><td>—</td></tr></tbody></table><p>基于上述编程基础能力，应该能独自进行图像算法开发，输出满足以下要求的算法代码&#x2F;功能：</p><ul><li>具有一定的兼容能力：<ul><li>兼容不同操作系统：windows|linux|macOS etc.</li><li>兼容不同的指令架构：x86|x64|arm etc.</li><li>兼容不同调试版本：release|debug etc.</li></ul></li><li>具有一定的版本管理能力：<ul><li>版本定位：Change Id|Commit Id|Git Tag|Build Time etc.</li><li>版本发布说明：Release Note etc.</li><li>使用说明文档：ReadMe.md|<code>xxx -help</code> etc.</li></ul></li><li>具有一定的日志能力（LOG系统）：<ul><li>不同等级Log：Fatal|Error|Warning|Info|Debug etc.</li><li>输出不同位置：CMD终端|文本文件|CSV文件 etc.</li></ul></li><li>具有一定的模块化能力：<ul><li>模块满足： <strong>高内聚低耦合</strong></li><li>注释模块：简单代码自注释，复杂代码有详细流程注释，支持 <strong>Doxygen</strong></li><li>测试模块：具有合格的单元测试能力，以及相应的批处理（shell|python调用）</li></ul></li><li>具有一定的工程应用能力：<ul><li>算力：常驻，峰值</li><li>内存：常驻，峰值</li><li>耗时：常驻，峰值</li><li>功耗：常驻，峰值</li><li>依赖性：依赖库尽量少</li></ul></li></ul><hr><h2 id="图像基础"><a href="#图像基础" class="headerlink" title="图像基础"></a>图像基础</h2><table><thead><tr><th>基本单元</th><th>子模块&#x2F;参数</th><th>学习途径</th><th>备注</th></tr></thead><tbody><tr><td>相机模组</td><td>Cover Glass</td><td>—</td><td>—</td></tr><tr><td></td><td>Lens</td><td>—</td><td>—</td></tr><tr><td></td><td>COMS sensor</td><td>—</td><td>—</td></tr><tr><td></td><td>ISP&#x2F;DSP</td><td>—</td><td>—</td></tr><tr><td></td><td>FPC</td><td>—</td><td>—</td></tr><tr><td>Lens</td><td>清晰度MTF</td><td>—</td><td>—</td></tr><tr><td></td><td>光圈</td><td>—</td><td>—</td></tr><tr><td></td><td>景深</td><td>—</td><td>—</td></tr><tr><td></td><td>畸变</td><td>—</td><td>—</td></tr><tr><td></td><td>杂散光</td><td>—</td><td>ghost&#x2F;flare&#x2F;射线杂光&#x2F;ASAP</td></tr><tr><td>CMOS Sensor</td><td>pixel size</td><td>—</td><td>—</td></tr><tr><td></td><td>active pixels</td><td>—</td><td>—</td></tr><tr><td></td><td>color filter array</td><td>—</td><td>—</td></tr><tr><td></td><td>sensitivity</td><td>—</td><td>—</td></tr><tr><td></td><td>dynamic range</td><td>—</td><td>—</td></tr><tr><td></td><td>SNR</td><td>—</td><td>—</td></tr><tr><td>Image Sensor Processing</td><td>AEC&#x2F;AEDC&#x2F;AWB&#x2F;AF</td><td>—</td><td>—</td></tr><tr><td></td><td>BLC&#x2F;BPC&#x2F;FPNC</td><td>—</td><td>—</td></tr><tr><td></td><td>Raw NR</td><td>—</td><td>Noise Profile</td></tr><tr><td></td><td>Lens Shading Correction</td><td>—</td><td>—</td></tr><tr><td></td><td>Demosaic</td><td>—</td><td>RGGB&#x2F;RCCB</td></tr><tr><td></td><td>CCM</td><td>—</td><td>—</td></tr><tr><td></td><td>TMO</td><td>—</td><td>alaw</td></tr><tr><td>量产用视觉检测方案</td><td>清晰度算法方案</td><td>—</td><td>ISO12233</td></tr><tr><td></td><td>脏污检测方案</td><td>—</td><td>—</td></tr><tr><td></td><td>高低照度方案</td><td>—</td><td>—</td></tr><tr><td></td><td>Shading标定方案</td><td>—</td><td>—</td></tr><tr><td></td><td>补光检测方案</td><td>—</td><td>—</td></tr></tbody></table><h3 id="镜头选型"><a href="#镜头选型" class="headerlink" title="镜头选型"></a>镜头选型</h3><ul><li>MIC(Max Image Circle)|FOV|lens架构</li><li>lens list</li><li>MIC|EFL|F&#x2F;#</li><li>确认CRA|barrel diameter|景深</li><li>样品性能确认，holder确认</li><li>杂光确认</li><li>轴向视点|FOV确认</li></ul><h3 id="Sensor选型"><a href="#Sensor选型" class="headerlink" title="Sensor选型"></a>Sensor选型</h3><ul><li>optical format</li><li>active pixels</li><li>pixel size</li><li>color filter array</li><li>chief ray angle: fill factor|micro-lens</li><li>FSI|BSI|stacked BSI</li><li>Conversion gain|full well charge</li><li>rolling shutter|global shutter</li><li>responsivity|sensitivity</li><li>SNR</li><li>Noise</li><li>Dynamic Range</li><li>Black Level</li></ul><h3 id="典型-ISP-Pipeline"><a href="#典型-ISP-Pipeline" class="headerlink" title="典型 ISP Pipeline"></a>典型 ISP Pipeline</h3><p>slin -&gt; bpc -&gt; blc -&gt; rdns -&gt; rhdr -&gt; lsc -&gt; wbc -&gt; demosaic -&gt; ccm -&gt; gamma -&gt; gtm -&gt; csc(rgb2yuv) -&gt; cfc(yuv444 -&gt; yuv422 -&gt; yuv420)</p><ul><li>slin: 分段线性化，采用两个gamma（8个点和256个点）串联</li><li>bpc：坏点校正</li><li>blc：黑电平校正</li><li>rdns：raw域降噪</li><li>rhdr：raw域HDR</li><li>lsc：lens shading correction</li><li>wbc：白平衡校正</li><li>demosaic：去马赛克</li><li>ccm：颜色校正</li><li>gamma：亮度域转变</li><li>gtm：global tone mapping</li></ul><h3 id="典型-ISP-IP"><a href="#典型-ISP-IP" class="headerlink" title="典型 ISP IP"></a>典型 ISP IP</h3><p>LSC：要考虑效果，算力（定点化，计算量优化）等</p><ul><li>求当前pixel距离光心的xy方向偏移量</li><li>归一化，1&#x2F;r &#x3D; (1+frac) * 1 &gt;&gt; (15-exp)</li><li>旋转校正</li><li>椭圆伸缩变换校正</li><li>求欧式距离平方</li><li>33个点插值求gain</li></ul><h3 id="推荐读物"><a href="#推荐读物" class="headerlink" title="推荐读物"></a>推荐读物</h3><ul><li><p>RS: rolling shutter imaging on the electric grid from two rolling shutters to one global shutter</p></li><li><p>mipi:mipi-csi-2 spectification</p></li><li><p>智能CMOS图像传感器与应用</p></li><li><p>image sensor and signal processing for digital still cameras</p></li><li><p>ISO12233</p></li><li><p>EMVA1288</p></li><li><p>exposure fusion:a simple and practical alternative to high dynmaic range photograph</p></li><li><p>NR: drunet|edvr|mctf|vmctf</p><ul><li>review:a comprehensive comparision of multi-dimensional image denoising methods</li><li>fastdvd</li><li>vnlnet</li><li>edvr</li><li>a brief review of real world color image denoising</li><li>benchmarking denoising algorithms with real photographs</li><li>unprocessing images for learned raw denoising</li></ul></li><li><p>暗光增强</p><ul><li>LLE</li><li>STAR</li><li>LLIM</li></ul></li></ul><hr><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><span id="unix教程">Unix教程:</span></p><ol><li><a href="www.info.ee.surrey.ac.uk/Teaching/Unix/">Linux beginner</a></li><li><a href="https://www.runoob.com/linux/linux-tutorial.html">菜鸟Linux教程</a></li><li><a href="https://www.runoob.com/linux/linux-shell.html">菜鸟Shell教程</a></li><li><a href="https://www.ruanyifeng.com/blog/2020/12/ssh-tutorial.html">博客：阮老师的SSH入门</a></li><li><a href="https://github.com/iggredible/Learn-Vim">Github: Learn Vim</a></li><li><a href="https://www.cnblogs.com/along21/p/10366886.html">博客：文本三剑客教程</a></li></ol><p><span id="cc教程">C&#x2F;C++教程:</span></p><ol><li><a href="https://cplusplus.com/doc/tutorial/">C++ Language(C++ 11)</a></li><li><a href="https://github.com/applenob/Cpp_Primer_Practice">《C++ Primer 中文版（第 5 版）》学习仓库</a></li><li><a href="https://zh-google-styleguide.readthedocs.io/en/latest/">Google 开源项目风格指南——中文版</a></li><li><a href="https://www.tutorialspoint.com/compile_cpp_online.php">Online C++ Compiler</a></li><li><a href="https://google.github.io/googletest/primer.html">GoogleTest Primer</a></li></ol><h3 id="Python教程"><a href="#Python教程" class="headerlink" title="Python教程"></a>Python教程</h3><ol><li><a href="https://www.runoob.com/python3/python3-tutorial.html">菜鸟Python3教程</a></li><li><a href="http://www.pythondoc.com/pythontutorial3/index.html">Python官方入门指南（中文）</a></li><li><a href="http://blog.17study.com.cn/2018/12/18/python3-lesson1/">从零开始学习PYTHON3讲义</a></li></ol><h3 id="CMake教程"><a href="#CMake教程" class="headerlink" title="CMake教程"></a>CMake教程</h3><ol><li><a href="https://cmake.org/cmake/help/latest/guide/tutorial/index.html">CMake Tutorial</a></li><li><a href="https://cliutils.gitlab.io/modern-cmake/">An Introduction to Modern CMake</a></li><li><a href="https://www.cnblogs.com/foohack/p/3939506.html">博客：CMake编译目标</a></li></ol><h3 id="Matlab教程"><a href="#Matlab教程" class="headerlink" title="Matlab教程"></a>Matlab教程</h3><ol><li><a href="https://www.cainiaojc.com/matlab/matlab-tutorial.html">菜鸟Matlab教程</a></li></ol><h3 id="CUDA教程"><a href="#CUDA教程" class="headerlink" title="CUDA教程"></a>CUDA教程</h3><ol><li><a href="https://cloud.tencent.com/developer/article/1803649">博客：一文详解OpenCV中的CUDA模块</a></li><li><a href="https://zhuanlan.zhihu.com/p/34587739">博客：CUDA编程入门极简教程</a></li></ol><h3 id="Git教程"><a href="#Git教程" class="headerlink" title="Git教程"></a>Git教程</h3><ol><li><a href="https://www.runoob.com/git/git-tutorial.html">菜鸟Git教程</a></li><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600">博客：廖雪峰Git教程</a></li></ol><h3 id="Doxygen教程"><a href="#Doxygen教程" class="headerlink" title="Doxygen教程"></a>Doxygen教程</h3><ol><li><a href="https://www.doxygen.nl/manual/starting.html">Doxygen Manual</a></li></ol><h3 id="Docker教程"><a href="#Docker教程" class="headerlink" title="Docker教程"></a>Docker教程</h3><ol><li><a href="https://www.runoob.com/docker/docker-hello-world.html">菜鸟Docker教程</a></li></ol><h3 id="OpenCV教程"><a href="#OpenCV教程" class="headerlink" title="OpenCV教程"></a>OpenCV教程</h3><ol><li><a href="https://docs.opencv.org/4.x/">OpenCV</a></li><li><a href="https://blog.csdn.net/s15810751918/article/details/107705387">博客：linux下编译安装</a></li></ol><h3 id="ROS-Catkin教程"><a href="#ROS-Catkin教程" class="headerlink" title="ROS&#x2F;Catkin教程"></a>ROS&#x2F;Catkin教程</h3><ol><li><a href="https://wiki.ros.org/cn/ROS/Tutorials">ROS教程</a></li><li><a href="https://wiki.ros.org/ROS/Tutorials">ROS Tutorials</a></li><li><a href="https://wiki.ros.org/catkin/Tutorials">Catkin Tutorials</a></li><li><a href="https://catkin-tools.readthedocs.io/en/latest/">Catkin Command Line Tools</a></li><li><a href="http://wiki.ros.org/image_view#image_view.2BAC8-diamondback.video_recorder">image_view</a></li><li><a href="https://wiki.ros.org/cn/roslaunch/Tutorials/Roslaunch%20tips%20for%20larger%20projects">Roslaunch在大型项目中的使用技巧</a></li><li><a href="https://www.ncnynl.com/archives/201701/1273.html">博客：ROS&#x2F;C++入门教程</a></li><li><a href="https://songapore.gitbook.io/ros-tutorials/">博客：ROS教程</a></li></ol><h3 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h3><ol><li><a href="https://www.runoob.com/design-pattern/design-pattern-tutorial.html">菜鸟设计模式教程</a></li><li><a href="https://c.biancheng.net/design_pattern/">博客：Java设计模式</a></li><li><a href="https://zhulao.gitee.io/blog/2019/03/31/23%E7%A7%8D%E7%BB%8F%E5%85%B8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F(%E9%99%84c++%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%A0%81)/index.html">博客：23种经典设计模式(附c++实现代码)</a></li><li><a href="https://github.com/liu-jianhao/Cpp-Design-Patterns">Github:Cpp-Design-Patterns(liu-jianhao)</a></li><li><a href="https://github.com/jaredtao/DesignPattern">Github:Design Pattern(jaredtao)</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Summary</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>人生的方法论：复盘</title>
    <link href="/2023/09/30/%E4%BA%BA%E7%94%9F%E7%9A%84%E6%96%B9%E6%B3%95%E8%AE%BA%EF%BC%9A%E5%A4%8D%E7%9B%98/"/>
    <url>/2023/09/30/%E4%BA%BA%E7%94%9F%E7%9A%84%E6%96%B9%E6%B3%95%E8%AE%BA%EF%BC%9A%E5%A4%8D%E7%9B%98/</url>
    
    <content type="html"><![CDATA[<h1 id="人生的方法论：复盘"><a href="#人生的方法论：复盘" class="headerlink" title="人生的方法论：复盘"></a>人生的方法论：复盘</h1><p>复盘有两种方法：情境重现法和关键点法。</p><ul><li>最原始使用的是情境重现法，将做过的事情重新演练一遍，但是这个方法有个缺点，容易受时间和空间的限制。</li><li>关键点法即围绕关键因素进行重现，思考和推演。</li></ul><p>复盘的步骤就是：做完一件事情，回顾一下目标，和现在的结果比对一下，没做好的地方进行反思，找出原因去改进；做的好的地方，固化成流程，执行下去；总结出规律，做成案例归档，供日后学习。</p><p><strong>复盘是一个不断学习、总结、反思、提炼和持续提高的过程</strong></p><p>复盘可以基于GRAI来进行梳理：</p><ul><li>Goal: 目标回顾</li><li>Result: 结果陈述</li><li>Analysis: 过程分析</li><li>Insight：归类总结</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>方法论</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WSL2 Ubuntu2004 ROS环境配置</title>
    <link href="/2023/09/30/WSL2-Ubuntu2004-ROS%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/09/30/WSL2-Ubuntu2004-ROS%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="WSL2-Ubuntu2004环境配置"><a href="#WSL2-Ubuntu2004环境配置" class="headerlink" title="WSL2 Ubuntu2004环境配置"></a>WSL2 Ubuntu2004环境配置</h1><h2 id="WSL2-ubuntu20-04-LTS安装"><a href="#WSL2-ubuntu20-04-LTS安装" class="headerlink" title="WSL2&#x2F;ubuntu20.04 LTS安装"></a>WSL2&#x2F;ubuntu20.04 LTS安装</h2><p>这个部分网上教程很多，本文不展开介绍。可以参考<a href="https://zhuanlan.zhihu.com/p/337104547">这篇文章</a>。</p><h2 id="ROS环境搭建"><a href="#ROS环境搭建" class="headerlink" title="ROS环境搭建"></a>ROS环境搭建</h2><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><ol><li><p>保持原始源：<code>sudo cp /etc/apt/sources.list /etc/apt/sources_origin.list</code></p></li><li><p>填充新源：<code>sudo vim /etc/apt/sources.list</code></p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse<br></code></pre></td></tr></table></figure><ol start="3"><li>升级&amp;更新：<code>sudo apt update</code>, <code>sudo apt upgrade</code></li></ol><p><em>注：如果在upgrade时遇到 <strong>unmet dependencies</strong> 的问题，可以尝试：<code>sudo apt remove ubuntu-advantage-tools</code></em></p><h3 id="ROS安装"><a href="#ROS安装" class="headerlink" title="ROS安装"></a>ROS安装</h3><ol><li>添加ROS包的清华镜像源：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo sh -c <span class="hljs-string">&#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ `lsb_release -cs` main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span><br></code></pre></td></tr></table></figure></li><li>设置秘钥: 需要先安装<code>curl</code>(<code>sudo apt install curl</code>)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -<br></code></pre></td></tr></table></figure><p>或者输入现成的秘钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-key adv --keyserver <span class="hljs-string">&#x27;hkp://keyserver.ubuntu.com:80&#x27;</span> --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654<br></code></pre></td></tr></table></figure><ol start="3"><li><p>升级&amp;更新：<code>sudo apt update</code>, <code>sudo apt upgrade</code></p></li><li><p>安装ROS: <code>sudo apt install ros-noetic-desktop-full</code></p></li></ol><h2 id="oh-my-zsh环境配置"><a href="#oh-my-zsh环境配置" class="headerlink" title="oh-my-zsh环境配置"></a>oh-my-zsh环境配置</h2><ol><li><p>download oh-my-zsh from github: <code>git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh</code></p></li><li><p>copy .zshrc: <code>cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</code></p></li><li><p>change your shell: <code>chsh -s /bin/zsh</code></p></li><li><p>restart wsl2</p></li><li><p>add plugins zsh-syntax-highlighting</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://gitee.com/lightnear/zsh-syntax-highlighting.git <span class="hljs-variable">$ZSH_CUSTOM</span>/plugins/zsh-syntax-highlighting<br></code></pre></td></tr></table></figure><ol start="6"><li>add plugins zsh-autosuggestions</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://gitee.com/kvdesign/zsh-autosuggestions.git <span class="hljs-variable">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Env</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WSL2</tag>
      
      <tag>ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>盘古开天辟地</title>
    <link href="/2023/08/19/HelloWorld/"/>
    <url>/2023/08/19/HelloWorld/</url>
    
    <content type="html"><![CDATA[<h1 id="Hello-world！"><a href="#Hello-world！" class="headerlink" title="Hello, world！"></a>Hello, world！</h1><p>程序员们熟悉的开头，用秦时明月镇楼！</p><img src="/2023/08/19/HelloWorld/feigong.jpg" class="" title="荆天明"><h2 id="关于本博客"><a href="#关于本博客" class="headerlink" title="关于本博客"></a>关于本博客</h2><p>作为前端小白，在基于网上大量google后，选择基于hexo和github page来搭建本博客。</p><p>博客是兴趣使然，用来折腾玩的。奈何相关知识储备不够，因此选取可行性高且参考样例多的方案来进行实施。本博客的搭建主要是参考<a href="https://blog.csdn.net/yaorongke/article/details/119089190">这篇博文</a>，主题采用fluid。系统是Windows10 WSL2，编辑器是VSCode。</p><p>这里主要涉及三部分工具：</p><ol><li>hexo：基于npm的工具包，是整个博客的主体框架</li><li>fluid：主题方式，主要是用于页面渲染和美化</li><li>github page：代码管理，静态博客展示</li></ol><h2 id="关于Hexo"><a href="#关于Hexo" class="headerlink" title="关于Hexo"></a>关于Hexo</h2><p>Hexo依赖<code>npm</code>和<code>nvm</code>，如果没有安装建议自行安装。</p><p>Hexo使用主要分以下几步：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 1. Create a new post</span><br>$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br><span class="hljs-comment"># 2. Run server</span><br>$ hexo server<br><span class="hljs-comment"># 3. Generate static files</span><br>$ hexo generate<br><span class="hljs-comment"># 4. Deploy to remote sites</span><br>$ hexo deploy<br></code></pre></td></tr></table></figure><p>实际使用过程中，一般使用偷懒命令，现在本地查看效果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># clean</span><br>hexo clean<br><span class="hljs-comment"># gen</span><br>hexo g -d<br><span class="hljs-comment"># run in localhost</span><br>hexo s<br></code></pre></td></tr></table></figure><p><em>注1：有时候新启终端命令<code>hexo</code>和<code>npm</code>无法识别，可能是<code>nvm</code>没有指定版本。需要先查看版本，再指定版本。</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># list nvm version</span><br>$ nvm <span class="hljs-built_in">ls</span><br><span class="hljs-comment"># if this version is used</span><br>nvm use v18.17.1<br></code></pre></td></tr></table></figure><p><em>注2：更多相关信息参考<a href="https://hexo.io/docs/">官方文档</a></em></p><h2 id="关于fluid"><a href="#关于fluid" class="headerlink" title="关于fluid"></a>关于fluid</h2><p>主题配置一般按照个性化进行设置，这里不展开。</p><p><em>注3：<a href="https://blog.csdn.net/yaorongke/article/details/119089190">参考博文</a>如果要使得统计数生效，需要设置<code>server_url</code></em></p><p><em>注4：更多配置说明参考<a href="https://fluid-dev.github.io/hexo-fluid-docs/">官方文档</a></em></p><h2 id="关于Github-Page"><a href="#关于Github-Page" class="headerlink" title="关于Github Page"></a>关于Github Page</h2><p>Githug Page页面相对简单，主要注意两点：</p><ol><li>Page页面<code>Deploy from a branch</code>栏下支持不同分支，但是只支持<code>/(root)</code>和<code>/docs</code>。<ol><li>建议非必要不使用<code>master</code>分支，一般考虑使用<code>release</code>分支</li><li>使用<code>/docs</code>，设置root目录下文件**_config.yml**：<code>public_dir: docs</code></li></ol></li><li><code>Custom domain</code>设置（optional）<ol><li>个人域名填写</li><li><code>Enforce HTTPS</code>使能</li></ol></li></ol><p><em>注5：域名需要双向设置，这里仅设置Github Page，还需要在域名解析服务商处进行设置</em></p><h2 id="关于域名"><a href="#关于域名" class="headerlink" title="关于域名"></a>关于域名</h2><p>一般登陆相关服务商网站，依次找到：域名管理-域名解析。选择<strong>A记录</strong>或者<strong>CNAME</strong>，这里以<strong>CNAME</strong>为例：</p><blockquote><p>记录类型：CNAME<br>主机记录：@<br>记录值：howlee1203.github.io<br>TTL: 10分钟</p></blockquote><p><em>注6：域名解析设置参考<a href="https://segmentfault.com/a/1190000011203711">这篇博文</a></em></p><h2 id="关于Github-Action"><a href="#关于Github-Action" class="headerlink" title="关于Github Action"></a>关于Github Action</h2><p>考虑到基于NAS搭建个人博客网站需要做域名备案，且部署涉及到个人IP的安全问题，因此暂不做考虑。这里主要用Github Action来做自动部署。</p><p>这里只介绍大体思路，实现细节可以参考<code>master</code>分支下的<code>.github/workflows/deploy.yml</code>，以及<a href="https://docs.github.com/en/actions">Github Action官方文档</a>。</p><ul><li>核心思路：选择两分支分别作为代码分支以及发布页面分支<ul><li><code>master</code>分支：代码分支，文档编辑以及本地发布</li><li><code>release</code>分支：发布页面分支，这里<code>/(root)</code>作为Page页面</li><li>workflows思路：<ul><li>环境准备：<ul><li>切换<code>master</code>分支</li><li>安装<code>node</code>, <code>hexo</code></li><li>git配置<code>user.name</code>, <code>user.email</code>, <code>ssh key</code></li><li>新建<code>../public</code>目录作为暂时页面存放目录</li></ul></li><li>页面生成：<ul><li>基于<code>hexo</code>命令生成页面</li><li>转移页面目录到<code>../public</code></li></ul></li><li>环境准备：<ul><li>切换<code>release</code>分支</li></ul></li><li>页面发布：<ul><li>打时间戳，切临时分支</li><li>清空当前目录并复制目录<code>../public</code>内容</li><li>提交修改，并合入<code>release</code>分支</li></ul></li></ul></li></ul></li></ul><h2 id="关于Google-Site"><a href="#关于Google-Site" class="headerlink" title="关于Google Site"></a>关于Google Site</h2><p>考虑到个人blog的封闭性，有必要让google能够search到相关字段，从而广而告之。<br>这里我主要参考<a href="https://saowu.top/blog/4tCVcic30/">这篇博客</a>，主要分三步：</p><ol><li>搜索资源提交：下载对应的html文件，上传到<code>master</code>分支的public目录下</li><li>添加站点地图：下载对应的xml文件，上传到<code>master</code>分支的public目录下</li><li>在 Google Search console 中添加你的 sitemap URL</li></ol><p>然后过一天后再验证google收录情况：<code>site:https://xxxx.github.io</code>即可。</p>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
      <tag>DNS</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
