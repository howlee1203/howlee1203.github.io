<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>人生的方法论：复盘</title>
    <link href="/2023/09/30/%E4%BA%BA%E7%94%9F%E7%9A%84%E6%96%B9%E6%B3%95%E8%AE%BA%EF%BC%9A%E5%A4%8D%E7%9B%98/"/>
    <url>/2023/09/30/%E4%BA%BA%E7%94%9F%E7%9A%84%E6%96%B9%E6%B3%95%E8%AE%BA%EF%BC%9A%E5%A4%8D%E7%9B%98/</url>
    
    <content type="html"><![CDATA[<h1 id="人生的方法论：复盘"><a href="#人生的方法论：复盘" class="headerlink" title="人生的方法论：复盘"></a>人生的方法论：复盘</h1><p>复盘有两种方法：情境重现法和关键点法。</p><ul><li>最原始使用的是情境重现法，将做过的事情重新演练一遍，但是这个方法有个缺点，容易受时间和空间的限制。</li><li>关键点法即围绕关键因素进行重现，思考和推演。</li></ul><p>复盘的步骤就是：做完一件事情，回顾一下目标，和现在的结果比对一下，没做好的地方进行反思，找出原因去改进；做的好的地方，固化成流程，执行下去；总结出规律，做成案例归档，供日后学习。</p><p><strong>复盘是一个不断学习、总结、反思、提炼和持续提高的过程</strong></p><p>复盘可以基于GRAI来进行梳理：</p><ul><li>Goal: 目标回顾</li><li>Result: 结果陈述</li><li>Analysis: 过程分析</li><li>Insight：归类总结</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>方法论</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WSL2 Ubuntu2004 ROS环境配置</title>
    <link href="/2023/09/30/WSL2-Ubuntu2004-ROS%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/09/30/WSL2-Ubuntu2004-ROS%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="WSL2-Ubuntu2004环境配置"><a href="#WSL2-Ubuntu2004环境配置" class="headerlink" title="WSL2 Ubuntu2004环境配置"></a>WSL2 Ubuntu2004环境配置</h1><h2 id="WSL2-ubuntu20-04-LTS安装"><a href="#WSL2-ubuntu20-04-LTS安装" class="headerlink" title="WSL2&#x2F;ubuntu20.04 LTS安装"></a>WSL2&#x2F;ubuntu20.04 LTS安装</h2><p>这个部分网上教程很多，本文不展开介绍。可以参考<a href="https://zhuanlan.zhihu.com/p/337104547">这篇文章</a>。</p><h2 id="ROS环境搭建"><a href="#ROS环境搭建" class="headerlink" title="ROS环境搭建"></a>ROS环境搭建</h2><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><ol><li><p>保持原始源：<code>sudo cp /etc/apt/sources.list /etc/apt/sources_origin.list</code></p></li><li><p>填充新源：<code>sudo vim /etc/apt/sources.list</code></p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse<br></code></pre></td></tr></table></figure><ol start="3"><li>升级&amp;更新：<code>sudo apt update</code>, <code>sudo apt upgrade</code></li></ol><p><em>注：如果在upgrade时遇到 <strong>unmet dependencies</strong> 的问题，可以尝试：<code>sudo apt remove ubuntu-advantage-tools</code></em></p><h3 id="ROS安装"><a href="#ROS安装" class="headerlink" title="ROS安装"></a>ROS安装</h3><ol><li>添加ROS包的清华镜像源：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo sh -c <span class="hljs-string">&#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ `lsb_release -cs` main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span><br></code></pre></td></tr></table></figure></li><li>设置秘钥: 需要先安装<code>curl</code>(<code>sudo apt install curl</code>)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -<br></code></pre></td></tr></table></figure><p>或者输入现成的秘钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-key adv --keyserver <span class="hljs-string">&#x27;hkp://keyserver.ubuntu.com:80&#x27;</span> --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654<br></code></pre></td></tr></table></figure><ol start="3"><li><p>升级&amp;更新：<code>sudo apt update</code>, <code>sudo apt upgrade</code></p></li><li><p>安装ROS: <code>sudo apt install ros-noetic-desktop-full</code></p></li></ol><h2 id="oh-my-zsh环境配置"><a href="#oh-my-zsh环境配置" class="headerlink" title="oh-my-zsh环境配置"></a>oh-my-zsh环境配置</h2><ol><li><p>download oh-my-zsh from github: <code>git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh</code></p></li><li><p>copy .zshrc: <code>cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</code></p></li><li><p>change your shell: <code>chsh -s /bin/zsh</code></p></li><li><p>restart wsl2</p></li><li><p>add plugins zsh-syntax-highlighting</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://gitee.com/lightnear/zsh-syntax-highlighting.git <span class="hljs-variable">$ZSH_CUSTOM</span>/plugins/zsh-syntax-highlighting<br></code></pre></td></tr></table></figure><ol start="6"><li>add plugins zsh-autosuggestions</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://gitee.com/kvdesign/zsh-autosuggestions.git <span class="hljs-variable">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>env</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WSL2,ROS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>盘古开天辟地</title>
    <link href="/2023/08/19/HelloWorld/"/>
    <url>/2023/08/19/HelloWorld/</url>
    
    <content type="html"><![CDATA[<h1 id="Hello-world！"><a href="#Hello-world！" class="headerlink" title="Hello, world！"></a>Hello, world！</h1><p>程序员们熟悉的开头，用秦时明月镇楼！</p><img src="/2023/08/19/HelloWorld/feigong.jpg" class="" title="荆天明"><h2 id="关于本博客"><a href="#关于本博客" class="headerlink" title="关于本博客"></a>关于本博客</h2><p>作为前端小白，在基于网上大量google后，选择基于hexo和github page来搭建本博客。</p><p>博客是兴趣使然，用来折腾玩的。奈何相关知识储备不够，因此选取可行性高且参考样例多的方案来进行实施。本博客的搭建主要是参考<a href="https://blog.csdn.net/yaorongke/article/details/119089190">这篇博文</a>，主题采用fluid。系统是Windows10 WSL2，编辑器是VSCode。</p><p>这里主要涉及三部分工具：</p><ol><li>hexo：基于npm的工具包，是整个博客的主体框架</li><li>fluid：主题方式，主要是用于页面渲染和美化</li><li>github page：代码管理，静态博客展示</li></ol><h2 id="关于Hexo"><a href="#关于Hexo" class="headerlink" title="关于Hexo"></a>关于Hexo</h2><p>Hexo依赖<code>npm</code>和<code>nvm</code>，如果没有安装建议自行安装。</p><p>Hexo使用主要分以下几步：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 1. Create a new post</span><br>$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br><span class="hljs-comment"># 2. Run server</span><br>$ hexo server<br><span class="hljs-comment"># 3. Generate static files</span><br>$ hexo generate<br><span class="hljs-comment"># 4. Deploy to remote sites</span><br>$ hexo deploy<br></code></pre></td></tr></table></figure><p>实际使用过程中，一般使用偷懒命令，现在本地查看效果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># clean</span><br>hexo clean<br><span class="hljs-comment"># gen</span><br>hexo g -d<br><span class="hljs-comment"># run in localhost</span><br>hexo s<br></code></pre></td></tr></table></figure><p><em>注1：有时候新启终端命令<code>hexo</code>和<code>npm</code>无法识别，可能是<code>nvm</code>没有指定版本。需要先查看版本，再指定版本。</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># list nvm version</span><br>$ nvm <span class="hljs-built_in">ls</span><br><span class="hljs-comment"># if this version is used</span><br>nvm use v18.17.1<br></code></pre></td></tr></table></figure><p><em>注2：更多相关信息参考<a href="https://hexo.io/docs/">官方文档</a></em></p><h2 id="关于fluid"><a href="#关于fluid" class="headerlink" title="关于fluid"></a>关于fluid</h2><p>主题配置一般按照个性化进行设置，这里不展开。</p><p><em>注3：<a href="https://blog.csdn.net/yaorongke/article/details/119089190">参考博文</a>如果要使得统计数生效，需要设置<code>server_url</code></em></p><p><em>注4：更多配置说明参考<a href="https://fluid-dev.github.io/hexo-fluid-docs/">官方文档</a></em></p><h2 id="关于Github-Page"><a href="#关于Github-Page" class="headerlink" title="关于Github Page"></a>关于Github Page</h2><p>Githug Page页面相对简单，主要注意两点：</p><ol><li>Page页面<code>Deploy from a branch</code>栏下支持不同分支，但是只支持<code>/(root)</code>和<code>/docs</code>。<ol><li>建议非必要不使用<code>master</code>分支，一般考虑使用<code>release</code>分支</li><li>使用<code>/docs</code>，设置root目录下文件**_config.yml**：<code>public_dir: docs</code></li></ol></li><li><code>Custom domain</code>设置（optional）<ol><li>个人域名填写</li><li><code>Enforce HTTPS</code>使能</li></ol></li></ol><p><em>注5：域名需要双向设置，这里仅设置Github Page，还需要在域名解析服务商处进行设置</em></p><h2 id="关于域名"><a href="#关于域名" class="headerlink" title="关于域名"></a>关于域名</h2><p>一般登陆相关服务商网站，依次找到：域名管理-域名解析。选择<strong>A记录</strong>或者<strong>CNAME</strong>，这里以<strong>CNAME</strong>为例：</p><blockquote><p>记录类型：CNAME<br>主机记录：@<br>记录值：howlee1203.github.io<br>TTL: 10分钟</p></blockquote><p><em>注6：域名解析设置参考<a href="https://segmentfault.com/a/1190000011203711">这篇博文</a></em></p><h2 id="关于Github-Action"><a href="#关于Github-Action" class="headerlink" title="关于Github Action"></a>关于Github Action</h2><p>考虑到基于NAS搭建个人博客网站需要做域名备案，且部署涉及到个人IP的安全问题，因此暂不做考虑。这里主要用Github Action来做自动部署。</p><p>这里只介绍大体思路，实现细节可以参考<code>master</code>分支下的<code>.github/workflows/deploy.yml</code>，以及<a href="https://docs.github.com/en/actions">Github Action官方文档</a>。</p><ul><li>核心思路：选择两分支分别作为代码分支以及发布页面分支<ul><li><code>master</code>分支：代码分支，文档编辑以及本地发布</li><li><code>release</code>分支：发布页面分支，这里<code>/(root)</code>作为Page页面</li><li>workflows思路：<ul><li>环境准备：<ul><li>切换<code>master</code>分支</li><li>安装<code>node</code>, <code>hexo</code></li><li>git配置<code>user.name</code>, <code>user.email</code>, <code>ssh key</code></li><li>新建<code>../public</code>目录作为暂时页面存放目录</li></ul></li><li>页面生成：<ul><li>基于<code>hexo</code>命令生成页面</li><li>转移页面目录到<code>../public</code></li></ul></li><li>环境准备：<ul><li>切换<code>release</code>分支</li></ul></li><li>页面发布：<ul><li>打时间戳，切临时分支</li><li>清空当前目录并复制目录<code>../public</code>内容</li><li>提交修改，并合入<code>release</code>分支</li></ul></li></ul></li></ul></li></ul><h2 id="关于Google-Site"><a href="#关于Google-Site" class="headerlink" title="关于Google Site"></a>关于Google Site</h2><p>考虑到个人blog的封闭性，有必要让google能够search到相关字段，从而广而告之。<br>这里我主要参考<a href="https://saowu.top/blog/4tCVcic30/">这篇博客</a>，主要分三步：</p><ol><li>搜索资源提交：下载对应的html文件，上传到<code>master</code>分支的public目录下</li><li>添加站点地图：下载对应的xml文件，上传到<code>master</code>分支的public目录下</li><li>在 Google Search console 中添加你的 sitemap URL</li></ol><p>然后过一天后再验证google收录情况：<code>site:https://xxxx.github.io</code>即可。</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo,Fluid,DNS</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
